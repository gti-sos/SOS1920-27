{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\ApexChart.svelte",
    "..\\..\\HighChart.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import {\r\n        onMount\r\n    } from \"svelte\";\r\n    import {\r\n        pop\r\n    } from \"svelte-spa-router\";\r\n \r\n    import Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import { Alert } from \"sveltestrap\";\r\n\r\n    //ALERTAS\r\n    let visible = false;\r\n    let color = \"danger\";\r\n    \r\n    let spc = [];\r\n    import ApexCharts from 'apexcharts';\r\n    let errorMSG = \"\";\r\n    onMount(getSPC);\r\n \r\n\r\n     //GET INITIALDATA\r\n     async function getSPCLoadInitialData() {\r\n \r\n        console.log(\"Fetching spc...\");\r\n        await fetch(\"/api/v2/spc-stats/loadInitialData\");\r\n        const res = await fetch(\"/api/v2/spc-stats?limit=10&offset=1\");\r\n        loadGraphs();\r\n        if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            spc = json;\r\n            totaldata=12;\r\n            console.log(\"Received \" + spc.length + \" spc.\");\r\n        } else {\r\n            errorMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n\r\n    //DELETE ALL\r\n    async function deleteSPCALL() {\r\n        const res = await fetch(\"/api/v2/spc-stats/\", {\r\n            method: \"DELETE\"\r\n        }).then(function (res) {\r\n            loadGraphs();\r\n            visible = true;\r\n            if (res.status==200) {\r\n                totaldata=0;\r\n                color = \"success\";\r\n                errorMSG = \"Objetos borrados correctamente\";\r\n                console.log(\"Deleted all spc.\");            \r\n            }else if (res.status==400) {\r\n                color = \"danger\";\r\n                errorMSG = \"Ha ocurrido un fallo\";\r\n                console.log(\"BAD REQUEST\");            \r\n            } else {\r\n                color = \"danger\";\r\n                errorMSG= res.status + \": \" + res.statusText;\r\n                console.log(\"ERROR!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    //GET\r\n    async function getSPC() {\r\n \r\n        console.log(\"Fetching spc...\");\r\n        const res = await fetch(\"/api/v2/spc-stats?limit=10&offset=1\");\r\n        if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            spc = json;\r\n            \r\n            console.log(\"Received \" + spc.length + \" spc.\");\r\n        } else {\r\n            errorMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n    async function loadGraphs() {\r\n        let MyData = [];\r\n\r\n        const resData = await fetch(\"/api/v2/spc-stats\");\r\n        MyData = spc;\r\n\r\n        var mujeres = MyData.map((dato)=> dato.female_number);\r\n        var hombres = MyData.map((dato)=> dato.male_number);\r\n        var paises = MyData.map((dato)=> {\r\n            return dato.country\r\n        });\r\n\r\n        var options = {\r\n          series: [{\r\n          name: 'Hombres',\r\n          data: hombres\r\n        }, {\r\n          name: 'Mujeres',\r\n          data: mujeres\r\n        }],\r\n          chart: {\r\n          height: 550,\r\n          type: 'area'\r\n        },\r\n        dataLabels: {\r\n          enabled: true\r\n        },\r\n        stroke: {\r\n          curve: 'smooth'\r\n        },\r\n        xaxis: {\r\n          type: 'category',\r\n          categories: paises\r\n        },\r\n        };\r\n\r\n        var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\r\n        chart.render();\r\n }\r\n\r\n\r\n      \r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/apexcharts\" on:load={loadGraphs}></script>\r\n</svelte:head>\r\n<main>\r\n\r\n    <h1>SPC Manager</h1>\r\n    <Button color=\"success\" on:click=\"{getSPCLoadInitialData}\">\r\n        Reiniciar ejemplos iniciales\r\n    </Button>\r\n    <Button color=\"danger\" on:click=\"{deleteSPCALL}\">\r\n        Borrar todo\r\n    </Button>\r\n    <div id=\"chart\" style=\"text-align: center;\">Suicidios por cada 100,000 personas\r\n    </div>\r\n</main>\r\n\r\n<style>\r\n \r\n @import url(https://fonts.googleapis.com/css?family=Roboto);\r\n\r\nbody {\r\n  font-family: Roboto, sans-serif;\r\n}\r\n\r\n#chart {\r\n  max-width: 100%;\r\n  margin: 35px auto;\r\n}\r\n</style>",
    "<script>\r\n    import{\r\n        onMount\r\n    } from \"svelte\";\r\n    import{\r\n        Alert\r\n    } from \"sveltestrap\";\r\n\r\n    import Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n\r\n    //ALERTAS\r\n    let visible = false;\r\n    let color = \"danger\";\r\n\r\n    let errorMSG = \"\";\r\n    onMount(getLQ);\r\n\r\n    //GET\r\n    async function getLQ() {\r\n        console.log(\"Fetching lq...\");\r\n        const res = await fetch(\"api/v2/lq-stats?limit=10&offset=1\");\r\n        LoadGraphs();\r\n        if(res.ok){\r\n            console.log(\"Ok\");\r\n            const json = await res.json();\r\n            lq = json;\r\n            console.log(\"Received \" + lq.length + \"lq.\");\r\n        } else{\r\n            errorMSG = res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        } \r\n    }\r\n\r\n    //GET LoadInitialData\r\n    async function getLQLoadInitialData() {\r\n\r\n        console.log(\"Fetching lq...\");\r\n        await fetch(\"/api/v2/lq-stats/loadInitialData\")\r\n        const res = await fetch(\"/api/v2/lq-stats?limit=10&offset=\"+1);\r\n        LoadGraphs();\r\n\r\n        if (res.ok){\r\n            console.log(\"Ok\");\r\n            const json = await res.json();\r\n            lq = json;\r\n            totaldata = 12;\r\n            console.log(\"Received \" + lq.length + \" lq.\");\r\n        } else {\r\n            errorMSG = res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n\r\n    //DELETE ALL\r\n    async function deleteLQALL(){\r\n        const res = await fetch(\"/api/v2/lq-stats\", {\r\n            method: \"DELETE\"\r\n        }).then(function (res){\r\n            LoadGraphs();\r\n            visible = true;\r\n            if(res.status==200){\r\n                totaldata=0;\r\n                color = \"sucess\";\r\n                errorMSG = \"Objetos borrados correctamente\";\r\n                console.log(\"Deleted all lq.\");\r\n            } else if(res.status==400){\r\n                color = \"danger\";\r\n                errorMSG = \"Ha ocurrido un fallo\";\r\n                console.log(\"BAD REQUST\");\r\n            } else{\r\n                color = \"danger\";\r\n                errorMSG = res.status + \": \" + res.statusText;\r\n                console.log(\"ERROR!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    //gráfica\r\n    async function LoadGraphs(){\r\n        let MyData = [];\r\n\r\n        const resData = await fetch(\"/api/v2/lq-stats\");\r\n        MyData = await resData.json();\r\n\r\n        //xAxis\r\n        var paises = MyData.filter(function (objeto) {\r\n                return objeto.year==2016;\r\n            }).map((dato)=> [dato.country]);\r\n\r\n        //yAxis\r\n\r\n        var stab = MyData.filter(function(objeto){\r\n                return objeto.year==2016;\r\n        }).map((dato)=> [dato.stability]);\r\n\r\n        var righ = MyData.filter(function(objeto){\r\n                return objeto.year==2016;\r\n        }).map((dato)=> [dato.right]);\r\n\r\n        var heal = MyData.filter(function(objeto){\r\n                return objeto.year==2016;\r\n        }).map((dato)=> [dato.health]);\r\n\r\n        var secu = MyData.filter(function(objeto){\r\n                return objeto.year==2016;\r\n        }).map((dato)=> [dato.security]);\r\n\r\n        var clima = MyData.filter(function(objeto){\r\n                return objeto.year==2016;\r\n        }).map((dato)=> [dato.climate]);\r\n\r\n        var cost = MyData.filter(function(objeto){\r\n                return objeto.year==2016;\r\n        }).map((dato)=> [dato.costs]);\r\n\r\n        var popu = MyData.filter(function(objeto){\r\n                return objeto.year==2016;\r\n        }).map((dato)=> [dato.popularity]);\r\n\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'bar'\r\n            },\r\n            title: {\r\n                text: 'Calidad de vida por países del año 2016'\r\n            },\r\n            xAxis: {\r\n                categories: paises\r\n            },\r\n            yAxis: {\r\n                min: 0,\r\n                title: {\r\n                    text: ''\r\n                }\r\n            },\r\n            legend: {\r\n                reversed: true\r\n            },\r\n            plotOptions: {\r\n                series: {\r\n                    stacking: 'normal'\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Stability',\r\n                data: stab\r\n            }, {\r\n                name: 'Right',\r\n                data: righ\r\n            }, {\r\n                name: 'Health',\r\n                data: heal\r\n            }, {\r\n                name: 'Security',\r\n                data: secu\r\n            }, {\r\n                name: 'Climate',\r\n                data: clima\r\n            }, {\r\n                name: 'Costs',\r\n                data: cost\r\n            }, {\r\n                name: 'Popularity',\r\n                data: popu\r\n            }]\r\n        });\r\n\r\n\r\n};\r\n</script>\r\n\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/export-data.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{LoadGraphs}\"></script>\r\n</svelte:head>\r\n\r\n<main>\r\n    <h1>LQ Manager</h1>\r\n    <Button color=\"primary\" on:click=\"{getLQLoadInitialData}\">\r\n        Reiniciar ejemplos iniciales\r\n    </Button>\r\n    <Button color=\"danger\" on:click=\"{deleteLQALL}\">\r\n        Borrar todo\r\n    </Button>\r\n    <figure class=\"highcharts-figure\">\r\n        <div id=\"container\"></div>\r\n        <p class=\"highcharts-description\">\r\n            En esta gráfica veremos la clasificación de los países dependiendo de su calidad de vida en 2016 basándonos en algunos datos de dichos países, como puede ser su popularidad, clima, seguridad, etc.\r\n        </p>\r\n    </figure>\r\n</main>\r\n\r\n<style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 310px; \r\n        max-width: 800px;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    #container {\r\n        height: 400px;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n\r\n</style>"
  ],
  "names": [],
  "mappings": "AA+IC,QAAQ,IAAI,8CAA8C,CAAC,CAAC,AAM7D,MAAM,cAAC,CAAC,AACN,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,CAAC,IAAI,AACnB,CAAC;AC8CG,kBAAkB,eAA+B,CAAC,AAC9C,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,IAAI,AACpB,CAAC,AAED,UAAU,eAAC,CAAC,AACR,MAAM,CAAE,KAAK,AACjB,CAAC"
}