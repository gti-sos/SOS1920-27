{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Home.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import {\r\n        onMount\r\n    } from \"svelte\";\r\n    import {\r\n        pop\r\n    } from \"svelte-spa-router\";\r\n \r\n    import Table from \"sveltestrap/src/Table.svelte\";\r\n    import Button from \"sveltestrap/src/Button.svelte\";\r\n    import { Alert } from \"sveltestrap\";\r\n    //Para busquedas\r\n    import { UncontrolledCollapse, Collapse, CardBody, Card } from \"sveltestrap\";\r\n    let isOpen = false;\r\n    let busquedas = \"/api/v2/spc-stats?\";\r\n\r\n    //ALERTAS\r\n    let visible = false;\r\n    let color = \"danger\";\r\n    \r\n    let page = 1;\r\n    let totaldata=12;\r\n    let spc = [];\r\n    let newSpc = {\r\n        country: \"\",\r\n        both_sex: \"\",\r\n        male_rank: \"\",\r\n        male_number: \"\",\r\n        female_rank: \"\",\r\n        female_number: \"\",\r\n        ratio: \"\",\r\n        year: \"\",\r\n        continent: \"\"\r\n    };\r\n\r\n    let searchSpc = {\r\n        country: null,\r\n        both_sex: null,\r\n        male_rank: null,\r\n        male_number: null,\r\n        female_rank: null,\r\n        female_number: null,\r\n        ratio: null,\r\n        year: null,\r\n        continent: null\r\n    };\r\n    let errorMSG = \"\";\r\n    onMount(getSPC);\r\n \r\n    //GET\r\n    async function getSPC() {\r\n \r\n        console.log(\"Fetching spc...\");\r\n        const res = await fetch(\"/api/v2/spc-stats?limit=10&offset=1\");\r\n        loadGraphs();\r\n        if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            spc = json;\r\n            \r\n            console.log(\"Received \" + spc.length + \" spc.\");\r\n        } else {\r\n            errorMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n \r\n    //GET INITIALDATA\r\n    async function getSPCLoadInitialData() {\r\n \r\n        console.log(\"Fetching spc...\");\r\n        await fetch(\"/api/v2/spc-stats/loadInitialData\");\r\n        const res = await fetch(\"/api/v2/spc-stats?limit=10&offset=1\");\r\n        loadGraphs();\r\n        if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            spc = json;\r\n            totaldata=12;\r\n            console.log(\"Received \" + spc.length + \" spc.\");\r\n        } else {\r\n            errorMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n\r\n    //INSERT\r\n    async function insertSPC() {\r\n \r\n        console.log(\"Inserting spc...\" + JSON.stringify(newSpc));\r\n        const res = await fetch(\"/api/v2/spc-stats\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify(newSpc),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(function (res) {\r\n            getSPC();\r\n            \r\n            visible = true;\r\n            if (res.status==200) {\r\n                totaldata++;\r\n                color = \"success\";\r\n                errorMSG = newSpc.country +\" creado correctamente\";\r\n                loadGraphs();\r\n                console.log(\"Inserted \"+newSpc.country +\" spc.\");            \r\n            }else if (res.status== 400) {\r\n                color = \"danger\";\r\n                errorMSG = \"Formato incorrecto, compruebe que Country y Year estén rellenos.\";\r\n                console.log(\"BAD REQUEST\");            \r\n            }else if (res.status==409) {\r\n                color = \"danger\";\r\n                errorMSG = newSpc.country +\" \" +newSpc.year +\"  ya existe, recuerde que Year y Country son exclusivos.\";\r\n                console.log(\"This data already exits\");            \r\n            } else {\r\n                color = \"danger\";\r\n                errorMSG= \"Formato incorrecto, compruebe que Country y Year estén rellenos.\";\r\n                console.log(\"BAD REQUEST\");\r\n            }\r\n        });\r\n         \r\n    }\r\n\r\n    //DELETE SPECIFIC\r\n    async function deleteSPC(name, year) {\r\n        const res = await fetch(\"/api/v2/spc-stats/\" + name + \"/\" + year, {\r\n            method: \"DELETE\"\r\n        }).then(function (res) {\r\n            visible = true;\r\n            getSPC();      \r\n            loadGraphs();\r\n            if (res.status==200) {\r\n                totaldata--;\r\n                color = \"success\";\r\n                errorMSG = name + \" \" + year + \" borrado correctamente\";\r\n                console.log(\"Deleted \" + name);            \r\n            }else if (res.status==404) {\r\n                color = \"danger\";\r\n                errorMSG = \"No se ha encontrado el objeto\" + name;\r\n                console.log(\"SUICIDE NOT FOUND\");            \r\n            } else {\r\n                color = \"danger\";\r\n                errorMSG= res.status + \": \" + res.statusText;\r\n                console.log(\"ERROR!\");\r\n            }      \r\n        });\r\n    }\r\n\r\n    //DELETE ALL\r\n    async function deleteSPCALL() {\r\n        const res = await fetch(\"/api/v2/spc-stats/\", {\r\n            method: \"DELETE\"\r\n        }).then(function (res) {\r\n            getSPC();\r\n            loadGraphs();\r\n            visible = true;\r\n            if (res.status==200) {\r\n                totaldata=0;\r\n                color = \"success\";\r\n                errorMSG = \"Objetos borrados correctamente\";\r\n                console.log(\"Deleted all spc.\");            \r\n            }else if (res.status==400) {\r\n                color = \"danger\";\r\n                errorMSG = \"Ha ocurrido un fallo\";\r\n                console.log(\"BAD REQUEST\");            \r\n            } else {\r\n                color = \"danger\";\r\n                errorMSG= res.status + \": \" + res.statusText;\r\n                console.log(\"ERROR!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    //SEARCH\r\n    async function searchSPC() {\r\n \r\n        console.log(\"Searching spc...\");\r\n\r\n\r\n        if (searchSpc.country!=null) {\r\n            busquedas+=\"country=\"+searchSpc.country +\"&\";\r\n        }if (searchSpc.both_sex!=null) {\r\n            busquedas+=\"both_sex=\"+searchSpc.both_sex +\"&\";\r\n        }if (searchSpc.male_rank!=null) {\r\n            busquedas+=\"male_rank=\"+searchSpc.male_rank +\"&\";\r\n        }if (searchSpc.male_number!=null) {\r\n            busquedas+=\"male_number=\"+searchSpc.male_number +\"&\";\r\n        }if (searchSpc.female_rank!=null) {\r\n            busquedas+=\"female_rank=\"+searchSpc.female_rank +\"&\";\r\n        }if (searchSpc.female_number!=null) {\r\n            busquedas+=\"female_number=\"+searchSpc.female_number +\"&\";\r\n        }if (searchSpc.ratio!=null) {\r\n            busquedas+=\"ratio=\"+searchSpc.ratio +\"&\";\r\n        }if (searchSpc.year!=null) {\r\n            busquedas+=\"year=\"+searchSpc.year +\"&\";\r\n        }if (searchSpc.continent!=null) {\r\n            busquedas+=\"continent=\"+searchSpc.continent +\"&\";\r\n        }\r\n\r\n        const res = await fetch(busquedas);\r\n        busquedas=\"/api/v2/spc-stats?\";\r\n        searchSpc = {\r\n            country: null,\r\n            both_sex: null,\r\n            male_rank: null,\r\n            male_number: null,\r\n            female_rank: null,\r\n            female_number: null,\r\n            ratio: null,\r\n            year: null,\r\n            continent: null\r\n        };\r\n        if (res.ok) {\r\n            visible = false;\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            spc = json;\r\n            console.log(\"Received \" + spc.length + \" spc.\");\r\n        } else {\r\n            visible = true;\r\n            color = \"danger\";\r\n            errorMSG = \"No se ha encontrado ningún objeto\";\r\n            console.log(\"Data not found!\");\r\n        }\r\n    }\r\n\r\n    //getNextPage\r\n    async function getNextPage() {\r\n \r\n        console.log(totaldata);\r\n        if (page+10 > totaldata) {\r\n            page = 1\r\n        } else {\r\n            page+=10\r\n        }\r\n        console.log(\"Charging page \" +page);\r\n        const res = await fetch(\"/api/v2/spc-stats?limit=10&offset=\"+page);\r\n\r\n        if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            spc = json;\r\n            console.log(\"Received \" + spc.length + \" spc.\");\r\n        } else {\r\n            errorMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n\r\n    //getPreviewPage\r\n    async function getPreviewPage() {\r\n \r\n        if (page-10>=1) {\r\n            page-=10; \r\n        } else page = 1\r\n        console.log(\"Charging page \" +page);\r\n        const res = await fetch(\"/api/v2/spc-stats?limit=10&offset=\"+page);\r\n\r\n        if (res.ok) {\r\n            console.log(\"Ok:\");\r\n            const json = await res.json();\r\n            spc = json;\r\n            console.log(\"Received \" + spc.length + \" spc.\");\r\n        } else {\r\n            errorMSG= res.status + \": \" + res.statusText;\r\n            console.log(\"ERROR!\");\r\n        }\r\n    }\r\n\r\n    async function loadGraphs() {\r\n        let MyData = [];\r\n\r\n        const resData = await fetch(\"/api/v2/spc-stats\");\r\n        MyData = await resData.json();\r\n\r\n        var euro = MyData.filter(function (el) {\r\n                return el.continent == \"europe\" && el.year==2013;\r\n            }).map((dato)=> {     \r\n            return {\r\n                \"name\": dato.country,\r\n                \"value\": dato.both_sex\r\n                };\r\n        });\r\n\r\n        var asia = MyData.filter(function (el) {\r\n                return el.continent == \"asia\" && el.year==2013;\r\n            }).map((dato)=> {     \r\n            return {\r\n                \"name\": dato.country,\r\n                \"value\": dato.both_sex\r\n                };\r\n        });\r\n\r\n        var africa = MyData.filter(function (el) {\r\n                return el.continent == \"africa\" && el.year==2013;\r\n            }).map((dato)=> {     \r\n            return {\r\n                \"name\": dato.country,\r\n                \"value\": dato.both_sex\r\n                };\r\n        });\r\n\r\n        var south = MyData.filter(function (el) {\r\n                return el.continent == \"south america\" && el.year==2013;\r\n            }).map((dato)=> {     \r\n            return {\r\n                \"name\": dato.country,\r\n                \"value\": dato.both_sex\r\n                };\r\n        });\r\n\r\n        var north = MyData.filter(function (el) {\r\n                return el.continent == \"north america\" && el.year==2013;\r\n            }).map((dato)=> {     \r\n            return {\r\n                \"name\": dato.country,\r\n                \"value\": dato.both_sex\r\n                };\r\n        });\r\n\r\n        var oceania = MyData.filter(function (el) {\r\n                return el.continent == \"oceania\" && el.year==2013;\r\n            }).map((dato)=> {     \r\n            return {\r\n                \"name\": dato.country,\r\n                \"value\": dato.both_sex\r\n                };\r\n        });\r\n\r\n        Highcharts.chart('container', {\r\n            chart: {\r\n                type: 'packedbubble',\r\n                height: '100%'\r\n            },\r\n            title: {\r\n                text: 'Suicides per 100,000 people in 2013 '\r\n            },\r\n            tooltip: {\r\n                useHTML: true,\r\n                pointFormat: '<b>{point.name}:</b> {point.value}'\r\n            },\r\n            plotOptions: {\r\n                packedbubble: {\r\n                    minSize: '20%',\r\n                    maxSize: '100%',\r\n                    zMin: 0,\r\n                    zMax: 1000,\r\n                    layoutAlgorithm: {\r\n                        gravitationalConstant: 0.05,\r\n                        splitSeries: true,\r\n                        seriesInteraction: false,\r\n                        dragBetweenSeries: true,\r\n                        parentNodeLimit: true\r\n                    },\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                        format: '{point.name}',\r\n                        style: {\r\n                            color: 'black',\r\n                            textOutline: 'none',\r\n                            fontWeight: 'normal'\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            series: [{\r\n                name: 'Europe',\r\n                data: euro\r\n            }, {\r\n                name: 'Africa',\r\n                data: africa\r\n            }, {\r\n                name: 'Oceania',\r\n                data: oceania\r\n            }, {\r\n                name: 'North America',\r\n                data: north\r\n            }, {\r\n                name: 'South America',\r\n                data: south\r\n            }, {\r\n                name: 'Asia',\r\n                data: asia\r\n            }]\r\n        });\r\n\r\n    };\r\n\r\n\r\n</script>\r\n\r\n<svelte:head>\r\n    <script src=\"https://code.highcharts.com/highcharts.js\"></script>\r\n    <script src=\"https://code.highcharts.com/highcharts-more.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/exporting.js\"></script>\r\n    <script src=\"https://code.highcharts.com/modules/accessibility.js\" on:load=\"{loadGraphs}\"></script>\r\n</svelte:head>\r\n<main>\r\n    <h1>SPC Manager</h1>\r\n\r\n\r\n    \r\n    <Button color=\"primary\" on:click={() => (isOpen = !isOpen)} class=\"mb-3\">\r\n        Buscar spc\r\n      </Button>\r\n      \r\n      <Collapse {isOpen}>\r\n        <Table bordered responsive>\r\n            <tbody>\r\n                <tr>\r\n                    <td><input placeholder=\"País\" bind:value=\"{searchSpc.country}\"></td>\r\n                    <td><input placeholder=\"Ambos sexos\" bind:value=\"{searchSpc.both_sex}\"></td>\r\n                    <td><input placeholder=\"Ranking hombres\" bind:value=\"{searchSpc.male_rank}\"></td>\r\n                    <td><input placeholder=\"Número hombres (en miles)\" bind:value=\"{searchSpc.male_number}\"></td>\r\n                    <td><input placeholder=\"Ranking mujeres\" bind:value=\"{searchSpc.female_rank}\"></td>\r\n                    <td><input placeholder=\"Número mujeres (en miles)\" bind:value=\"{searchSpc.female_number}\"></td>\r\n                    <td><input placeholder=\"Ratio\" bind:value=\"{searchSpc.ratio}\"></td>\r\n                    <td><input placeholder=\"Año\" bind:value=\"{searchSpc.year}\"></td>\r\n                    <td><input placeholder=\"Continente\" bind:value=\"{searchSpc.continent}\"></td>\r\n                    <td> <Button outline  color=\"primary\" on:click={searchSPC}>Buscar</Button> </td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n      </Collapse>\r\n\r\n      {#await spc}\r\n        Loading spc...\r\n    {:then spc}\r\n    <Alert color={color} isOpen={visible} toggle={() => (visible = false)}>\r\n        {#if errorMSG}\r\n            {errorMSG}\r\n        {/if}\r\n    </Alert>\r\n        <Table bordered responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>Country</th>\r\n                    <th>Both_sex</th>\r\n                    <th>Male_rank</th>\r\n                    <th>Male_number</th>\r\n                    <th>Female_rank</th>\r\n                    <th>Female_number</th>\r\n                    <th>Ratio</th>\r\n                    <th>Year</th>\r\n                    <th>Continent</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td><input bind:value=\"{newSpc.country}\"></td>\r\n                    <td><input bind:value=\"{newSpc.both_sex}\"></td>\r\n                    <td><input bind:value=\"{newSpc.male_rank}\"></td>\r\n                    <td><input bind:value=\"{newSpc.male_number}\"></td>\r\n                    <td><input bind:value=\"{newSpc.female_rank}\"></td>\r\n                    <td><input bind:value=\"{newSpc.female_number}\"></td>\r\n                    <td><input bind:value=\"{newSpc.ratio}\"></td>\r\n                    <td><input bind:value=\"{newSpc.year}\"></td>\r\n                    <td><input bind:value=\"{newSpc.continent}\"></td>\r\n                    <td> <Button outline  color=\"primary\" on:click={insertSPC}>Insertar</Button> </td>\r\n                </tr>\r\n \r\n                {#each spc as suicide}\r\n                    <tr>\r\n                        <td><a href=\"#/spc-stats/{suicide.country}/{suicide.year}\">{suicide.country}</a></td>\r\n                        <td>{suicide.both_sex}</td>\r\n                        <td>{suicide.male_rank}</td>\r\n                        <td>{suicide.male_number}</td>\r\n                        <td>{suicide.female_rank}</td>\r\n                        <td>{suicide.female_number}</td>\r\n                        <td>{suicide.ratio}</td>\r\n                        <td>{suicide.year}</td>\r\n                        <td>{suicide.continent}</td>\r\n                        <td><Button outline color=\"danger\" on:click=\"{deleteSPC(suicide.country, suicide.year)}\">Borrar</Button></td>\r\n                    </tr>\r\n                {/each}\r\n            </tbody>\r\n        </Table>\r\n          <Button color=\"success\" on:click=\"{getSPCLoadInitialData}\">\r\n            Reiniciar ejemplos iniciales\r\n        </Button>\r\n        <Button color=\"danger\" on:click=\"{deleteSPCALL}\">\r\n            Borrar todo\r\n        </Button>\r\n        <Button outline color=\"primary\" on:click=\"{getPreviewPage}\">\r\n           Atrás\r\n        </Button>\r\n        <Button outline color=\"primary\" on:click=\"{getNextPage}\">\r\n            Siguiente\r\n         </Button>\r\n         \r\n        \r\n    {/await}\r\n    \r\n    <br>\r\n    <br>\r\n    <Button outline color=\"secondary\" on:click=\"{pop}\">Volver</Button>\r\n    <div id=\"container\" style=\"height: 1000; min-width: 310px; max-width: 800px; margin: 100px\"></div>\r\n\r\n</main>\r\n\r\n<style>\r\n    .highcharts-figure, .highcharts-data-table table {\r\n        min-width: 320px; \r\n        max-width: 800px;\r\n        margin: 1em auto;\r\n    }\r\n\r\n    .highcharts-data-table table {\r\n        font-family: Verdana, sans-serif;\r\n        border-collapse: collapse;\r\n        border: 1px solid #EBEBEB;\r\n        margin: 10px auto;\r\n        text-align: center;\r\n        width: 100%;\r\n        max-width: 500px;\r\n    }\r\n    .highcharts-data-table caption {\r\n        padding: 1em 0;\r\n        font-size: 1.2em;\r\n        color: #555;\r\n    }\r\n    .highcharts-data-table th {\r\n        font-weight: 600;\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {\r\n        padding: 0.5em;\r\n    }\r\n    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {\r\n        background: #f8f8f8;\r\n    }\r\n    .highcharts-data-table tr:hover {\r\n        background: #f1f7ff;\r\n    }\r\n\r\n</style>"
  ],
  "names": [],
  "mappings": "AAihBI,sBAAsB,CAAC,oBAAK,CAAC,EAAE,eAA4C,CAAC,AACxE,UAAU,CAAE,OAAO,AACvB,CAAC"
}